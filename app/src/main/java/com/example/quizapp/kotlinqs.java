package com.example.quizapp;

public class kotlinqs {
    String[] questions1={
            "What is the keyword used to define a class in Kotlin?",
            "Which of the following is not a valid way to create an object in Kotlin?",
            "What is the purpose of the \"constructor\" in Kotlin?",
            " What is the syntax for calling a method in Kotlin?",
            "What is the keyword used to define a singleton class in Kotlin?",
            " What is the difference between a property and a field in Kotlin?",
            "What is the purpose of the \"override\" keyword in Kotlin?",
            " What is the difference between a \"companion object\" and a regular object in Kotlin?",
            " What is the keyword used to define an interface in Kotlin?",
            " What is the syntax for creating a subclass in Kotlin?",
            "How do you define a property in Kotlin that can only be accessed within the same class?",
            " What is the keyword used to define a sealed class in Kotlin?",
            "What is the keyword used to define an extension function in Kotlin?",
            " What is the keyword used to define a type alias in Kotlin?",
            " What is the difference between a \"var\" and a \"val\" in Kotlin?",
            "What is the keyword used to define a companion object in Kotlin?",
            " What is the purpose of the \"object\" keyword in Kotlin?",
            " What is the keyword used to define a constructor in Kotlin?",
            " What is the keyword used to define a destructor in Kotlin?",
            " What is a nested class in Kotlin?",
            " What keyword is used to define a nested class in Kotlin?",
            " Can an inner class have its own properties and methods?",
            "How can an inner class access the outer class's properties and methods?",
            " What keyword is used to create an instance of an inner class in Kotlin?",
            " What is the default constructor in Kotlin?",
            " How can you initialize variables in a primary constructor in Kotlin?",
            " What is the syntax for defining a secondary constructor in Kotlin?",
            " How can you call a primary constructor from a secondary constructor in Kotlin?",
            "What is the purpose of the init block in Kotlin?",
            " How can you pass parameters to a primary constructor in Kotlin?",
            " What is the syntax for defining a constructor with default values in Kotlin?",
            "How can you access variables initialized in a primary constructor in Kotlin?",
            "What is the purpose of the constructor keyword in Kotlin?",
            "How to declare a nullable variable in Kotlin?",
            "How to access the elements of an array in Kotlin?",
            " What is Kotlin?",
            " Which platform does Kotlin primarily target?",
            "What paradigm(s) does the Kotlin programming language follow?",
            "How do you declare a variable in Kotlin?",
            "How do you define a variable in Kotlin that cannot be reassigned?",
            "How do you declare a nullable variable in Kotlin?",
            "What is the difference between val and var in Kotlin?",
            "How do you define a function in Kotlin?",
            " What is the when expression used in Kotlin?",
            "What does ?. operator do in Kotlin?",
            "What is the default visibility modifier for functions in Kotlin if no modifier is specified?",
            "Which keyword is used to create a singleton in Kotlin?",
            "What is the main purpose of the let function in Kotlin?",
            "Which feature in Kotlin helps to prevent NullPointerExceptions?",
            "What is the purpose of the open modifier in Kotlin?",
            "How do you create a single-line comment in Kotlin?"
    };
    String[] optiona1={
            "class",
            "Using the keyword \"new\"",
            "To define the properties of an object",
            "object.method()",
            "singleton",
            "A property has a getter and setter, while a field does not",
            "To define a property or field",
            "A companion object is a singleton object, while a regular object is not",
            "abstract",
            "class Subclass: Superclass",
            "Using the keyword \"internal\"",
            "final",
            "extend",
            "alias",
            "\"var\" is a mutable variable, while \"val\" is an immutable variable",
            "object",
            "To define a singleton object",
            "constructor",
            "destructor",
            "A class that is defined within another class",
            "inner",
            "No, it can only access the outer class's properties and methods",
            "By using the \"this\" keyword",
            "create",
            "primary constructor",
            "by using the var keyword",
            "constructor(var name: String)",
            "by using the this keyword",
            "to initialize variables",
            "by using the var keyword",
            "constructor(var name: String = \"default\")",
            "by using the this keyword",
            "to define a constructor",
            "var name: String? = null",
            "array.get(index)",
            "A new version of Java.",
            "Python Bytecode",
            "Only Object-Oriented",
            "let myVariable = 10;",
            "var",
            "var name: String?",
            "They are identical and can be used interchangeably.",
            " fun myFunction() {}",
            "To create a loop.",
            "Null-safe type casting",
            " public",
            "static",
            "To facilitate null checks",
            "Safe Call Operator (?.)",
            " It allows a class to be instantiated.",
            "// This is a comment"
    };
    String[] optionb1={
            "struct",
            "Using the keyword \"object\"",
            "To initialize the properties of an object",
            "object.function()",
            "object",
            "A property is a variable, while a field is a constant",
            "To define a method in a subclass",
            "A companion object is defined inside a class, while a regular object is not",
            "class",
            "class Subclass extends Superclass",
            "Using the keyword \"protected\"",
            "sealed",
            "fun",
            "typedef",
            "\"var\" is a constant, while \"val\" is a variable",
            "class",
            "To define a static class",
            "new",
            "dispose",
            "A class that is defined within a function",
            "nested",
            "No, it can only access the outer class's properties and methods and cannot have its own",
            "By using the \"outer\" keyword",
            "new",
            "secondary constructor",
            "by using the val keyword",
            "constructor(val name: String)",
            "by using the super keyword",
            "to define constructors",
            "by using the val keyword",
            "constructor(val name: String = \"default\")",
            "by using the super keyword",
            "to initialize variables",
            "val name: String? = null",
            "array[index]",
            "A JavaScript framework.",
            "JavaScript",
            "Procedural",
            " val myVariable: Int = 10",
            " val",
            "var name: String",
            "'val' declares mutable variables, and 'var' declares immutable ones.",
            "def myFunction() {}",
            "To define a switch-case statement.",
            "Null-safe function calling",
            "private",
            "singleton",
            "To execute a block of code and return a result",
            "Non-null Assertion Operator (!!)",
            " It makes a function available for overriding.",
            " /* This is a comment */"
    };
    String[] optionc1={
            "object",
            "Using the keyword \"instance\"",
            "To define the methods of an object",
            "object.procedure()",
            "static",
            "A property is a constant, while a field is a variable",
            "To define a constructor in a subclass",
            "A companion object has access to the private members of a class, while a regular object does not",
            "object",
            "class Subclass inherits Superclass",
            "Using the keyword \"private\"",
            "closed",
            "operator",
            "define",
            "\"val\" is a mutable variable, while \"var\" is an immutable variable",
            "companion",
            "To define a non-static class",
            "create",
            "finalize",
            "A class that is defined within a package",
            "class",
            "Yes, but it can only access the outer class's properties and methods, not have its own",
            "By using the \"parent\" keyword",
            "instance",
            "explicit constructor",
            "by using the constructor keyword",
            "fun constructor(var name: String)",
            "by using the constructor keyword",
            "to set default values for variables",
            "by using the constructor keyword",
            "fun constructor(var name: String = \"default\")",
            "by using the constructor keyword",
            "to set default values for variables",
            "var name: String = null",
            "array(index)",
            "A statically-typed programming language for the JVM, Android, and browser.",
            " JVM (Java Virtual Machine) Bytecode",
            "Only Functional",
            "const myVariable = 10;",
            "const",
            "var name: String = null",
            "val' declares immutable variables, and 'var' declares mutable ones.",
            "function myFunction() {}",
            "To define a conditional expression.",
            " Null-safe member access",
            " internal",
            "single",
            "To transform an object",
            "Elvis Operator (?:)",
            " It enforces strict typing for variables.",
            "#This is a comment#"
    };
    String[] optiond1={
            "type",
            "Using the keyword \"val\"",
            "To define the class of an object",
            "object.call()",
            "final",
            "A property is a method, while a field is a variable",
            "To define a class in a subclass",
            "All of the above",
            "interface",
            "class Subclass implements Superclass",
            "Using the keyword \"local\"",
            "restricted",
            "infix",
            "type",
            "\"val\" is a constant, while \"var\" is a variable",
            "static",
            "To define an interface",
            "init",
            "destroy",
            "A class that is defined outside of any other class or function",
            "outer",
            "Yes, it can have its own properties and methods just like any other class",
            "By using the \"super\" keyword",
            "object",
            "implicit constructor",
            "by using the init keyword",
            "fun constructor(val name: String)",
            "by using the init keyword",
            "to create objects",
            "by using the init keyword",
            "fun constructor(val name: String = \"default\")",
            "by using the variable name",
            "to create objects",
            "None of these",
            "None of these",
            " A database management system.",
            "PHP",
            "Both Object-Oriented and Functional",
            " var myVariable: Int = 10",
            " final",
            " String name = null",
            "'val' is used for local variables, and 'var' is used for global variables.",
            "fun = myFunction() {}",
            "To create a lambda function.",
            "None of the above",
            "protected",
            " object",
            "None of the above",
            "Safe Cast Operator (as?)",
            "It allows a function to be called only from within its own class.",
            " # This is a comment"
    };
    String[] correctans1={
            "class",
            "Using the keyword \"instance\"",
            "To initialize the properties of an object",
            "object.method()",
            "object",
            "A property has a getter and setter, while a field does not",
            "To define a method in a subclass",
            "All of the above",
            "interface",
            "class Subclass: Superclass",
            "Using the keyword \"private\"",
            "sealed",
            "fun",
            "type",
            "\"var\" is a mutable variable, while \"val\" is an immutable variable",
            "companion",
            " To define a singleton object",
            "init",
            " finalize",
            " A class that is defined within another class",
            "nested",
            " Yes, it can have its own properties and methods just like any other class",
            "By using the \"outer\" keyword",
            "new",
            "implicit constructor",
            "by using the val keyword",
            "fun constructor(val name: String)",
            " by using the this keyword",
            " to initialize variables",
            "by using the val keyword",
            "constructor(val name: String = \"default\")",
            "by using the variable name",
            "to define a constructor",
            "var name: String? = null",
            "array[index]\n",
            "A statically-typed programming language for the JVM, Android, and browser.",
            "JVM (Java Virtual Machine) Bytecode",
            " Both Object-Oriented and Functional",
            " var myVariable: Int = 10",
            "val",
            "var name: String?",
            "'val' declares immutable variables, and 'var' declares mutable ones.",
            " fun myFunction() {}",
            " To define a switch-case statement.",
            "Null-safe member access",
            " public",
            " object",
            "To transform an object",
            "Safe Call Operator (?.)",
            " It makes a function available for overriding.",
            " // This is a comment"
    };
}
